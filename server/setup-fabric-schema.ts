import { connectToFabric, executeQuery } from './fabric-storage';
import { readFileSync } from 'fs';
import { join } from 'path';

export async function setupFabricSchema() {
  console.log('üîÑ Setting up Microsoft Fabric SQL Server schema...');
  
  try {
    // Connect to SQL Fabric
    await connectToFabric();
    
    // Read and execute schema file
    const schemaPath = join(process.cwd(), 'server', 'fabric-schema.sql');
    const schema = readFileSync(schemaPath, 'utf-8');
    
    // Split schema into individual statements
    const statements = schema.split(/;\s*GO\s*|\s*;\s*(?=CREATE|DROP|INSERT|IF)/i)
      .filter(stmt => stmt.trim().length > 0);
    
    console.log(`üìÑ Executing ${statements.length} SQL statements...`);
    
    for (const statement of statements) {
      const trimmedStatement = statement.trim();
      if (trimmedStatement.length > 0) {
        try {
          await executeQuery(trimmedStatement);
          console.log(`‚úÖ Executed: ${trimmedStatement.substring(0, 50)}...`);
        } catch (error) {
          console.error(`‚ùå Error executing statement: ${trimmedStatement.substring(0, 50)}...`);
          console.error(`   Error: ${error.message}`);
        }
      }
    }
    
    console.log('‚úÖ Schema setup completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Failed to setup schema:', error.message);
    throw error;
  }
}

export async function seedFabricData() {
  console.log('üå± Seeding Microsoft Fabric SQL Server with initial data...');
  
  try {
    // Connect to SQL Fabric
    await connectToFabric();
    
    // Seed Users
    console.log('üë• Seeding users...');
    await executeQuery(`
      INSERT INTO dbo.users (username, password, email, name, role) VALUES
      ('admin', '12cfad2ff4e4a96b7c7b72e4c6e4b9f21e6a8e90bf18b6a5e6d3f9b2c1a8e7d4', 'admin@fiergs.org.br', 'Administrador', 'admin'),
      ('tom', '12cfad2ff4e4a96b7c7b72e4c6e4b9f21e6a8e90bf18b6a5e6d3f9b2c1a8e7d4', 'tom@fiergs.org.br', 'Tom Silva', 'gestor'),
      ('maria', '12cfad2ff4e4a96b7c7b72e4c6e4b9f21e6a8e90bf18b6a5e6d3f9b2c1a8e7d4', 'maria@fiergs.org.br', 'Maria Santos', 'operacional'),
      ('carlos', '12cfad2ff4e4a96b7c7b72e4c6e4b9f21e6a8e90bf18b6a5e6d3f9b2c1a8e7d4', 'carlos@fiergs.org.br', 'Carlos Lima', 'operacional')
    `);
    
    // Seed Regions
    console.log('üó∫Ô∏è Seeding regions...');
    await executeQuery(`
      INSERT INTO dbo.regions (name, code, description) VALUES
      ('Central', 'CEN', 'Regi√£o Central do Estado'),
      ('Metropolitana', 'MET', 'Regi√£o Metropolitana'),
      ('Norte', 'NOR', 'Regi√£o Norte'),
      ('Sul', 'SUL', 'Regi√£o Sul'),
      ('Leste', 'LES', 'Regi√£o Leste'),
      ('Oeste', 'OES', 'Regi√£o Oeste'),
      ('Nordeste', 'NE', 'Regi√£o Nordeste'),
      ('Noroeste', 'NO', 'Regi√£o Noroeste'),
      ('Sudeste', 'SE', 'Regi√£o Sudeste'),
      ('Sudoeste', 'SO', 'Regi√£o Sudoeste'),
      ('Centro-Oeste', 'CO', 'Regi√£o Centro-Oeste')
    `);
    
    // Seed Sub-regions
    console.log('üó∫Ô∏è Seeding sub-regions...');
    await executeQuery(`
      INSERT INTO dbo.sub_regions (name, code, description, region_id) VALUES
      ('Porto Alegre', 'POA', 'Sub-regi√£o Porto Alegre', 2),
      ('Canoas', 'CAN', 'Sub-regi√£o Canoas', 2),
      ('Novo Hamburgo', 'NH', 'Sub-regi√£o Novo Hamburgo', 2),
      ('S√£o Leopoldo', 'SL', 'Sub-regi√£o S√£o Leopoldo', 2),
      ('Gravata√≠', 'GRA', 'Sub-regi√£o Gravata√≠', 2),
      ('Santa Maria', 'SM', 'Sub-regi√£o Santa Maria', 1),
      ('Passo Fundo', 'PF', 'Sub-regi√£o Passo Fundo', 3),
      ('Iju√≠', 'IJU', 'Sub-regi√£o Iju√≠', 6),
      ('Cruz Alta', 'CA', 'Sub-regi√£o Cruz Alta', 6),
      ('Pelotas', 'PEL', 'Sub-regi√£o Pelotas', 4),
      ('Rio Grande', 'RG', 'Sub-regi√£o Rio Grande', 4),
      ('Bag√©', 'BAG', 'Sub-regi√£o Bag√©', 4),
      ('Uruguaiana', 'URU', 'Sub-regi√£o Uruguaiana', 10),
      ('Santana do Livramento', 'SL', 'Sub-regi√£o Santana do Livramento', 10),
      ('Caxias do Sul', 'CS', 'Sub-regi√£o Caxias do Sul', 7),
      ('Bento Gon√ßalves', 'BG', 'Sub-regi√£o Bento Gon√ßalves', 7),
      ('Vacaria', 'VAC', 'Sub-regi√£o Vacaria', 7),
      ('Lajeado', 'LAJ', 'Sub-regi√£o Lajeado', 1),
      ('Estrela', 'EST', 'Sub-regi√£o Estrela', 1),
      ('Cachoeira do Sul', 'CS', 'Sub-regi√£o Cachoeira do Sul', 1),
      ('Santo √Çngelo', 'SA', 'Sub-regi√£o Santo √Çngelo', 8)
    `);
    
    // Seed Strategic Indicators
    console.log('üìä Seeding strategic indicators...');
    await executeQuery(`
      INSERT INTO dbo.strategic_indicators (name, description, category) VALUES
      ('Sustentabilidade Operacional', 'Indicador de sustentabilidade das opera√ß√µes', 'Operacional'),
      ('Receita de Servi√ßos', 'Indicador de receita gerada pelos servi√ßos', 'Financeiro'),
      ('Matr√≠culas em Educa√ß√£o', 'Indicador de n√∫mero de matr√≠culas em educa√ß√£o', 'Educa√ß√£o'),
      ('Ind√∫strias Atendidas em Sa√∫de', 'Indicador de ind√∫strias atendidas na √°rea de sa√∫de', 'Sa√∫de'),
      ('Trabalhadores da Ind√∫stria Atendidos em Sa√∫de', 'Indicador de trabalhadores atendidos na √°rea de sa√∫de', 'Sa√∫de'),
      ('Matr√≠culas Presenciais com Mais de 4 Horas', 'Indicador de matr√≠culas presenciais com carga hor√°ria superior a 4 horas', 'Educa√ß√£o'),
      ('Custo Hora Aluno', 'Indicador de custo por hora de aluno', 'Financeiro')
    `);
    
    // Seed Solutions
    console.log('üí° Seeding solutions...');
    await executeQuery(`
      INSERT INTO dbo.solutions (name, description) VALUES
      ('Educa√ß√£o', 'Solu√ß√µes relacionadas √† educa√ß√£o e capacita√ß√£o'),
      ('Sa√∫de', 'Solu√ß√µes relacionadas √† sa√∫de e seguran√ßa do trabalho')
    `);
    
    // Seed Service Lines
    console.log('üõ†Ô∏è Seeding service lines...');
    await executeQuery(`
      INSERT INTO dbo.service_lines (name, description, solution_id) VALUES
      ('Educa√ß√£o B√°sica', 'Servi√ßos de educa√ß√£o b√°sica e fundamental', 1),
      ('Educa√ß√£o Profissional', 'Servi√ßos de educa√ß√£o profissional e t√©cnica', 1),
      ('Educa√ß√£o Superior', 'Servi√ßos de educa√ß√£o superior e universit√°ria', 1),
      ('Atividade F√≠sica', 'Servi√ßos relacionados √† atividade f√≠sica e esporte', 2),
      ('Sa√∫de Ocupacional', 'Servi√ßos de sa√∫de ocupacional e medicina do trabalho', 2),
      ('Seguran√ßa do Trabalho', 'Servi√ßos de seguran√ßa e preven√ß√£o de acidentes', 2),
      ('Qualidade de Vida', 'Servi√ßos de promo√ß√£o da qualidade de vida', 2),
      ('Inova√ß√£o e Tecnologia', 'Servi√ßos de inova√ß√£o e desenvolvimento tecnol√≥gico', 1),
      ('Consultoria Empresarial', 'Servi√ßos de consultoria para empresas', 1),
      ('Meio Ambiente', 'Servi√ßos relacionados ao meio ambiente e sustentabilidade', 2),
      ('Responsabilidade Social', 'Servi√ßos de responsabilidade social empresarial', 2),
      ('Gest√£o e Governan√ßa', 'Servi√ßos de gest√£o e governan√ßa corporativa', 1),
      ('Empreendedorismo', 'Servi√ßos de apoio ao empreendedorismo', 1),
      ('Internacionaliza√ß√£o', 'Servi√ßos de apoio √† internacionaliza√ß√£o', 1),
      ('Pesquisa e Desenvolvimento', 'Servi√ßos de pesquisa e desenvolvimento', 1)
    `);
    
    // Seed Services
    console.log('üîß Seeding services...');
    await executeQuery(`
      INSERT INTO dbo.services (name, description, service_line_id) VALUES
      ('Ensino Fundamental', 'Servi√ßos de ensino fundamental completo', 1),
      ('Ensino M√©dio', 'Servi√ßos de ensino m√©dio regular', 1),
      ('Curso T√©cnico', 'Cursos t√©cnicos profissionalizantes', 2),
      ('Qualifica√ß√£o Profissional', 'Cursos de qualifica√ß√£o profissional', 2),
      ('Gradua√ß√£o', 'Cursos de gradua√ß√£o superior', 3),
      ('P√≥s-gradua√ß√£o', 'Cursos de p√≥s-gradua√ß√£o e especializa√ß√£o', 3),
      ('Academia', 'Servi√ßos de academia e condicionamento f√≠sico', 4),
      ('Esportes', 'Atividades esportivas e competi√ß√µes', 4),
      ('Medicina do Trabalho', 'Servi√ßos m√©dicos ocupacionais', 5),
      ('Exames Admissionais', 'Exames m√©dicos admissionais', 5),
      ('Treinamento de Seguran√ßa', 'Treinamentos de seguran√ßa do trabalho', 6),
      ('Equipamentos de Prote√ß√£o', 'Fornecimento de EPIs', 6),
      ('Alimenta√ß√£o Saud√°vel', 'Servi√ßos de alimenta√ß√£o e nutri√ß√£o', 7),
      ('Bem-estar', 'Programas de bem-estar e qualidade de vida', 7),
      ('Laborat√≥rios', 'Servi√ßos de laborat√≥rio e an√°lises', 8),
      ('Pesquisa Aplicada', 'Projetos de pesquisa aplicada', 8),
      ('Consultoria T√©cnica', 'Servi√ßos de consultoria t√©cnica especializada', 9),
      ('Diagn√≥stico Empresarial', 'Servi√ßos de diagn√≥stico e avalia√ß√£o empresarial', 9),
      ('Gest√£o Ambiental', 'Servi√ßos de gest√£o e consultoria ambiental', 10),
      ('Sustentabilidade', 'Programas de sustentabilidade empresarial', 10),
      ('Projetos Sociais', 'Desenvolvimento de projetos sociais', 11),
      ('Voluntariado', 'Programas de voluntariado empresarial', 11),
      ('Governan√ßa Corporativa', 'Servi√ßos de governan√ßa e compliance', 12),
      ('Gest√£o Estrat√©gica', 'Consultoria em gest√£o estrat√©gica', 12),
      ('Incuba√ß√£o', 'Servi√ßos de incuba√ß√£o de empresas', 13),
      ('Acelera√ß√£o', 'Programas de acelera√ß√£o de startups', 13),
      ('Miss√µes Comerciais', 'Organiza√ß√£o de miss√µes comerciais internacionais', 14),
      ('Certifica√ß√£o Internacional', 'Servi√ßos de certifica√ß√£o para mercados internacionais', 14),
      ('P&D Industrial', 'Pesquisa e desenvolvimento industrial', 15),
      ('Inova√ß√£o Tecnol√≥gica', 'Projetos de inova√ß√£o tecnol√≥gica', 15)
    `);
    
    console.log('‚úÖ Data seeding completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Failed to seed data:', error.message);
    throw error;
  }
}

// Run setup if this file is executed directly
import { fileURLToPath } from 'url';
import { dirname } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

if (process.argv[1] === __filename) {
  (async () => {
    try {
      await setupFabricSchema();
      await seedFabricData();
      console.log('üéâ Microsoft Fabric SQL Server setup completed successfully!');
    } catch (error) {
      console.error('üí• Setup failed:', error.message);
      process.exit(1);
    }
  })();
}